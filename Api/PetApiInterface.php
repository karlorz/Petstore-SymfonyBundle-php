<?php
/**
 * PetApiInterface
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Swagger Petstore - OpenAPI 3.0
 *
 * This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
 *
 * The version of the OpenAPI document: 1.0.19
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\ApiResponse;
use OpenAPI\Server\Model\Pet;

/**
 * PetApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface PetApiInterface
{

    /**
     * Sets authentication method petstore_auth
     *
     * @param string|null $value Value of the petstore_auth authentication method.
     *
     * @return void
     */
    public function setpetstore_auth(?string $value): void;

    /**
     * Sets authentication method api_key
     *
     * @param string|null $value Value of the api_key authentication method.
     *
     * @return void
     */
    public function setapi_key(?string $value): void;

    /**
     * Operation addPet
     *
     * Add a new pet to the store
     *
     * @param  Pet $pet  Create a new pet in the store (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function addPet(
        Pet $pet,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation deletePet
     *
     * Deletes a pet
     *
     * @param  int $petId  Pet id to delete (required)
     * @param  string|null $apiKey   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function deletePet(
        int $petId,
        ?string $apiKey,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation findPetsByStatus
     *
     * Finds Pets by status
     *
     * @param  string $status  Status values that need to be considered for filter (optional, default to 'available')
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function findPetsByStatus(
        string $status,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation findPetsByTags
     *
     * Finds Pets by tags
     *
     * @param  array|null $tags  Tags to filter by (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function findPetsByTags(
        ?array $tags,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation getPetById
     *
     * Find pet by ID
     *
     * @param  int $petId  ID of pet to return (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function getPetById(
        int $petId,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation updatePet
     *
     * Update an existing pet
     *
     * @param  Pet $pet  Update an existent pet in the store (required)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function updatePet(
        Pet $pet,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;

    /**
     * Operation updatePetWithForm
     *
     * Updates a pet in the store with form data
     *
     * @param  int $petId  ID of pet that needs to be updated (required)
     * @param  string|null $name  Name of pet that needs to be updated (optional)
     * @param  string|null $status  Status of pet that needs to be updated (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     */
    public function updatePetWithForm(
        int $petId,
        ?string $name,
        ?string $status,
        int &$responseCode,
        array &$responseHeaders
    ): void;

    /**
     * Operation uploadFile
     *
     * uploads an image
     *
     * @param  int $petId  ID of pet to update (required)
     * @param  string|null $additionalMetadata  Additional Metadata (optional)
     * @param  UploadedFile|null $body   (optional)
     * @param  int     &$responseCode    The HTTP Response Code
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return array|object|null
     */
    public function uploadFile(
        int $petId,
        ?string $additionalMetadata,
        ?UploadedFile $body,
        int &$responseCode,
        array &$responseHeaders
    ): array|object|null;
}
